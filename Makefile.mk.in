# Read hector/LICENSE.md file for copyright and licensing information.

$(eval DIR_ROOT?=$(subst /Makefile.mk.in,,$(lastword $(realpath $(foreach DIR,$(subst /, ,$(CURDIR)), $(eval DIR_ROOT_TEST=$(DIR_ROOT_TEST)/$(DIR))$(DIR_ROOT_TEST)/Makefile.mk.in)))))
PRJNAME        = hector
VERSION        = 0
SUBVERSION     = 0
EXTRAVERSION   = 0
include $(DIR_ROOT)/_aux/mk/00_sanity.mk
include $(DIR_ROOT)/_aux/mk/10_basic.mk
include $(DIR_BUILD)/configure.mk
LIBS           = pthread
NO_UNDEFINED=$(call quotecomma,$(filter -Wl$(COMMA)--no-undefined,@EXTRA_LXXFLAGS@))
$(eval $(call NEW_TARGET,hectord,src,-DTARGET_HECTOR_DAEMON,@RDYNAMIC@ $(NO_UNDEFINED)))
$(eval $(call NEW_TARGET,hector.cgi,cgi,-DTARGET_HECTOR_CGI,$(NO_UNDEFINED)))
$(eval $(call NEW_TARGET,hectoradmin,admin,-DTARGET_HECTOR_ADMIN,$(NO_UNDEFINED)))
$(eval $(call NEW_TARGET,codestation,app/codestation,,-fPIC -shared))
DO_@DO_TARGET@=1
EXEC_NAME    = 1exec

include $(DIR_ROOT)/_aux/inc-helper-pre.mk

override CXXFLAGS += @DEFS@
override LXXFLAGS +=
override LXXFLAGS := $(filter-out -Wl$(COMMA)--no-undefined,$(LXXFLAGS))

include $(DIR_ROOT)/_aux/inc-helper-post.mk

cgi-exe:
	cd $(DIR_ROOT)/build/release ; \
	g++ $(wildcard $(DIR_ROOT)/build/release/hector.cgi/*.o) -Wl,--whole-archive ${PREFIX}/lib/libyaal_hcore.a ${PREFIX}/lib/libyaal_tools.a -Wl,--no-whole-archive -lpthread -lssl -lcrypto -ldl -lxslt -lexslt -lxml2 -lpcre -lrt -lz -o exec ; \
	strip exec

cgi-exe-debug:
	cd $(DIR_ROOT)/build/debug ; \
	g++ $(wildcard $(DIR_ROOT)/build/release/hector.cgi/*.o) -Wl,--whole-archive ${PREFIX}/lib/libyaal_hcore-d.a ${PREFIX}/lib/libyaal_tools-d.a -Wl,--no-whole-archive -lpthread -lssl -lcrypto -ldl -lxslt -lexslt -lxml2 -lpcre -lrt -lz -o exec

